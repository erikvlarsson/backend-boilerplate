let express,morgan,cors,helmet,bodyParser,Config,Middleware,Routing,UserController;_9cf‍.w("express",[["default",["express"],function(v){express=v}]]);_9cf‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_9cf‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_9cf‍.w("helmet",[["default",["helmet"],function(v){helmet=v}]]);_9cf‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_9cf‍.w("./configuration/Config",[["default",["Config"],function(v){Config=v}]]);_9cf‍.w("./middleware/Middleware",[["default",["Middleware"],function(v){Middleware=v}]]);_9cf‍.w("./routes/Routing",[["default",["Routing"],function(v){Routing=v}]]);_9cf‍.w("./controllers/UserController",[["default",["UserController"],function(v){UserController=v}]]);









const app = express();

// app.use(morgan("common"));
app.use(helmet());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

app.use(
  cors({
    origin: ["http://localhost:3000", "http://127.0.0.1:3000"],
    credentials: true,
  })
);

app.use(function (req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header(
    "Access-Control-Allow-Headers",
    "Origin, X-Requested-With, Content-Type, Accept"
  );
  next();
});

// Import Routes
Routing.setRoutes(app);

// Apply Middleware
app.use(Middleware.notFound);
app.use(Middleware.errorHandler);

UserController.getAllUsers().then((users) => {
  _9cf‍.g.console.log(users);
});

Config.connectToMongoDB();
Config.startServer(app);
