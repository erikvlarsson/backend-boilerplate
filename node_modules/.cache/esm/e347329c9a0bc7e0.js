let express,morgan,cors,helmet,bodyParser,Config,Middleware,Routing;_9a0‍.w("express",[["default",["express"],function(v){express=v}]]);_9a0‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_9a0‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_9a0‍.w("helmet",[["default",["helmet"],function(v){helmet=v}]]);_9a0‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_9a0‍.w("./configuration/Config",[["default",["Config"],function(v){Config=v}]]);_9a0‍.w("./middleware/Middleware",[["default",["Middleware"],function(v){Middleware=v}]]);_9a0‍.w("./routes/Routing",[["default",["Routing"],function(v){Routing=v}]]);







const app = express();

app.use(cors());
app.use(morgan("tiny"));
app.use(helmet());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

app.use(function (req, res, next) {
  next();
  if (res.statusCode >= 400) throw new Error(`at ${req.method} ${req.path}`);
});

// Routes
Routing.setRoutes(app);

// Apply Middleware
// app.use(Middleware.notFound);
// app.use(Middleware.errorHandler);

Config.startServer(app);
Config.connectToMongoDB();
